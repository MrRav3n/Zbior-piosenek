{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-new/add-new.component.ts","webpack:///src/app/add-new/add-new.component.html","webpack:///src/app/all-songs/all-songs.component.ts","webpack:///src/app/all-songs/all-songs.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/band/band.component.ts","webpack:///src/app/band/band.component.html","webpack:///src/app/interceptor/http-error.interceptor.ts","webpack:///src/app/main-band/main-band.component.ts","webpack:///src/app/main-band/main-band.component.html","webpack:///src/app/playlist/playlist.component.ts","webpack:///src/app/playlist/playlist.component.html","webpack:///src/app/services/main.service.ts","webpack:///src/app/single-song/single-song.component.ts","webpack:///src/app/single-song/single-song.component.html","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddNewComponent","main","toastr","songs","addNewPlaylistForm","playlistName","required","addSongToPlaylistForm","songID","playlistID","bandID","addNewSongForm","songName","textToSend","val","filter","item","band","playlist","split","includes","_id","valid","setControl","addNewPlaylist","value","controls","setValue","get","addNewSongToPlaylist","subscribe","res","success","refreshValues","refresh","addNewSong","onEditClick","selector","templateUrl","styleUrls","AllSongsComponent","router","currentPlaylist","undefined","currentSong","v","replace","navigateByUrl","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","AppModule","provide","useClass","multi","deps","timeOut","positionClass","preventDuplicates","register","enabled","production","declarations","providers","bootstrap","BandComponent","InterceptorSkipHeader","HttpErrorInterceptor","request","next","headers","has","handle","clone","pipe","error","errorTitle","errorMessage","status","message","MainBandComponent","PlaylistComponent","map","song","push","i","iterator","MainService","http","location","api","bandName","console","log","post","songToPlaylist","skipLocationChange","navigate","providedIn","SingleSongComponent","iter","nextSong","WelcomeComponent","loginForm","patchValue","login","environment","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-add-new',\n  templateUrl: './add-new.component.html',\n  styleUrls: ['./add-new.component.scss']\n})\nexport class AddNewComponent implements OnInit {\n\n  addNewPlaylistForm: FormGroup;\n  addSongToPlaylistForm: FormGroup;\n  addNewSongForm: FormGroup;\n  songs = [];\n\n  constructor(\n    public main: MainService,\n    private toastr: ToastrService\n  ) {\n    this.addNewPlaylistForm = new FormGroup({\n      playlistName: new FormControl('', Validators.required)\n    })\n    this.addSongToPlaylistForm = new FormGroup({\n      songID: new FormControl('', Validators.required),\n      playlistID: new FormControl('', Validators.required),\n      bandID: new FormControl('', Validators.required)\n    })\n    this.addNewSongForm = new FormGroup({\n      songName: new FormControl('', Validators.required),\n      textToSend: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnInit() {}\n  onEditClick(val: any) {\n    this.songs = this.main.songs.filter((item) => {\n      return !this.main.band.playlist[val.split('$')[1]].songs.includes(item._id);\n    });\n  }\n\n  addNewPlaylist() {\n    if (this.addNewPlaylistForm.valid) {\n      this.addNewPlaylistForm.setControl('bandID', new FormControl(this.main.band._id))\n      this.main.addNewPlaylist(this.addNewPlaylistForm.value);\n    }\n  }\n\n  addNewSongToPlaylist() {\n    this.addSongToPlaylistForm.controls.playlistID.setValue(this.addSongToPlaylistForm.get('playlistID').value.split('$')[0]);\n    this.addSongToPlaylistForm.controls.bandID.setValue(this.main.band._id);\n    if (this.addSongToPlaylistForm.valid) {\n      this.main.addNewSongToPlaylist(this.addSongToPlaylistForm.value).subscribe(res => {\n        this.toastr.success('Dodano nową piosenkę do playlisty.', 'Udało się!')\n        this.main.refreshValues().subscribe(res => {\n          this.main.refresh();\n        });\n      });\n    }\n  }\n  addNewSong() {\n    if (this.addNewSongForm.valid) {\n      this.addNewSongForm.setControl('bandID', new FormControl(this.main.band._id))\n      this.main.addNewSong(this.addNewSongForm.value);\n    }\n  }\n\n}\n","<div class=\"cover m-0 row justify-content-center\">\n<div class=\"welcomeForm row justify-content-center col-md-10 col-11\">\n  <h1 class=\"text-center col-12 p-0 m-0 mb-4\">Dodaj nową playlistę</h1>\n  <div class=\"col-md-6 col-11\">\n    <form [formGroup]=\"addNewPlaylistForm\">\n      <div class=\"form-group\">\n        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Nazwa playlisty\"\n               formControlName=\"playlistName\">\n      </div>\n      <button class=\"btn btn-warning col-12\" (click)=\"addNewPlaylist()\">Dodaj!</button>\n    </form>\n  </div>\n</div>\n\n<div class=\"welcomeForm row justify-content-center col-md-10 col-11\">\n  <h1 class=\"text-center col-12 p-0 m-0 mb-4\">Dodaj piosenkę do playlisty</h1>\n  <div class=\"col-md-6 col-11\">\n    <form [formGroup]=\"addSongToPlaylistForm\">\n      <div class=\"form-group\">\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlSelect2\">Nazwa playlisty</label>\n          <select class=\"form-control\" id=\"exampleFormControlSelect2\" formControlName=\"playlistID\" (change)=\"onEditClick($event.target.value)\">\n            <option *ngFor=\"let playlist of this.main.band.playlist, let i=index\" [value]=\"playlist._id+'$'+i\">{{playlist.name}}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlSelect1\">Nazwa piosenki do dodania do playlisty</label>\n          <select class=\"form-control\" id=\"exampleFormControlSelect1\" formControlName=\"songID\">\n            <option *ngFor=\"let song of this.songs\" [value]=\"song._id\">{{song.name}}</option>\n          </select>\n        </div>\n      </div>\n      <button class=\"btn btn-warning col-12\" (click)=\"addNewSongToPlaylist()\">Dodaj!</button>\n    </form>\n  </div>\n</div>\n\n<div class=\"welcomeForm row justify-content-center col-md-10 col-11\">\n  <h1 class=\"text-center col-12 p-0 m-0 mb-4\">Dodaj nową piosenkę</h1>\n  <div class=\"col-md-6 col-11\">\n    <form [formGroup]=\"addNewSongForm\">\n      <div class=\"form-group\">\n        <input type=\"email\" class=\"form-control\"  aria-describedby=\"emailHelp\" placeholder=\"Nazwa piosenki\"\n               formControlName=\"songName\">\n      </div>\n      <div class=\"form-group\">\n        <textarea class=\"form-control\" rows=\"5\" formControlName=\"textToSend\" placeholder=\"Treść piosenki\"></textarea>\n      </div>\n      <button class=\"btn btn-warning col-12\" (click)=\"addNewSong()\">Dodaj!</button>\n    </form>\n  </div>\n</div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-all-songs',\n  templateUrl: './all-songs.component.html',\n  styleUrls: ['./all-songs.component.scss']\n})\nexport class AllSongsComponent implements OnInit {\n\n  constructor(\n    public main: MainService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.main.currentPlaylist = undefined;\n  }\n\n  setCurrentSong(id) {\n    this.main.currentSong = this.main.songs.filter(v => v._id === id)[0];\n    this.main.currentSong.textToSend.replace(/↵/g, '<br/>');\n    this.router.navigateByUrl('band/current-song');\n  }\n  delete(id) {\n    this.main.delete(id);\n  }\n\n}\n","<h1 class=\"text-center bb mt-2\">Wszystkie piosenki</h1>\n<div *ngFor=\"let song of this.main.songs\" class=\"choose row justify-content-around\" ><div class=\"col-10\" (click)=\"setCurrentSong(song._id)\">{{song.name}}</div> <div class=\"delete col-2\" (click)=\"delete(song._id)\">Usuń</div> </div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from \"./welcome/welcome.component\";\nimport { AllSongsComponent } from \"./all-songs/all-songs.component\";\nimport { PlaylistComponent } from \"./playlist/playlist.component\";\nimport { AddNewComponent } from \"./add-new/add-new.component\";\nimport { BandComponent } from \"./band/band.component\";\nimport { MainBandComponent } from \"./main-band/main-band.component\";\nimport { SingleSongComponent } from \"./single-song/single-song.component\";\n\n\nconst routes: Routes = [\n  {path: '', component: WelcomeComponent},\n  {path: 'band', component: BandComponent, children: [\n      {path: 'all-songs', component: AllSongsComponent},\n      {path: '', component: MainBandComponent},\n      {path: 'playlist', component: PlaylistComponent},\n      {path: 'add-new', component: AddNewComponent},\n      {path: 'current-playlist', component: PlaylistComponent},\n      {path: 'current-song', component: SingleSongComponent},\n  ]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { MainService } from \"./services/main.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(\n    private main: MainService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    if (this.main.band) {\n      this.router.navigateByUrl('all-songs');\n    } else {\n      this.router.navigateByUrl('');\n    }\n  }\n\n}\n","<router-outlet class=\"w-100 h-100\">\r\n\r\n</router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { AllSongsComponent } from './all-songs/all-songs.component';\nimport { PlaylistComponent } from './playlist/playlist.component';\nimport { AddNewComponent } from './add-new/add-new.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { MainService } from \"./services/main.service\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { BandComponent } from './band/band.component';\nimport { MainBandComponent } from './main-band/main-band.component';\nimport { SingleSongComponent } from './single-song/single-song.component';\nimport { HttpErrorInterceptor } from \"./interceptor/http-error.interceptor\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    AllSongsComponent,\n    PlaylistComponent,\n    AddNewComponent,\n    BandComponent,\n    MainBandComponent,\n    SingleSongComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot({\n      timeOut: 3000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n    }),\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [\n    MainService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptor,\n      multi: true,\n      deps: [ToastrService]\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\n\n@Component({\n  selector: 'app-band',\n  templateUrl: './band.component.html',\n  styleUrls: ['./band.component.scss']\n})\nexport class BandComponent implements OnInit {\n\n  constructor(\n    public main: MainService\n  ) { }\n\n  ngOnInit() {}\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" routerLink=\"/band\">Zbiór-piosenek</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse ml-md-auto\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/band\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\">Strona główna</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/band/add-new\" [routerLinkActive]=\"['active']\">Dodaj</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/band/all-songs\" [routerLinkActive]=\"['active']\">Wszystkie piosenki</a>\n      </li>\n\n    </ul>\n  </div>\n</nav>\n<router-outlet>\n\n</router-outlet>\n","import {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\n\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n  constructor(\n    private toastr: ToastrService,\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (request.headers.has(InterceptorSkipHeader)) {\n      const headers = request.headers.delete(InterceptorSkipHeader);\n      return next.handle(request.clone({ headers }));\n    }\n\n    return next.handle(request)\n      .pipe(\n        retry(1),\n        catchError((error: HttpErrorResponse) => {\n          let errorTitle = '';\n          let errorMessage = '';\n\n          if (error.error) {\n            errorTitle = 'Wystąpił błąd!';\n            errorMessage =  error.error.error;\n            this.toastr.error(errorMessage, errorTitle);\n          } else {\n            errorTitle = `Kod błędu: ${error.status}`;\n            errorMessage = `Wiadomość: ${error.message}`;\n            this.toastr.error(errorMessage, errorTitle);\n          }\n          return throwError(errorMessage);\n        })\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-main-band',\n  templateUrl: './main-band.component.html',\n  styleUrls: ['./main-band.component.scss']\n})\nexport class MainBandComponent implements OnInit {\n\n  constructor(\n    public main: MainService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {}\n\n  setCurrentPlaylist(id) {\n    this.main.currentPlaylist = this.main.band.playlist.filter(v => v._id === id)[0];\n    this.router.navigateByUrl('band/current-playlist');\n  }\n\n}\n","<h1 class=\"text-center mt-2 mb-3 bb\">{{this.main.band.name}}</h1>\n\n<h1 class=\"text-center\">Twoje playlisty</h1>\n\n<h3 *ngFor=\"let playlist of main.band.playlist\" class=\"choose\" (click)=\"setCurrentPlaylist(playlist._id)\">{{playlist.name}}</h3>\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrls: ['./playlist.component.scss']\n})\nexport class PlaylistComponent implements OnInit {\n\n  songs = [];\n\n  constructor(\n    public main: MainService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.main.currentPlaylist.songs.map(v => {\n      const song = this.main.songs.filter((item) => {\n        return item._id === v;\n      })[0];\n     if(song != null) {\n       this.songs.push(song);\n     }\n    })\n    // this.songs = this.main.songs.filter((item) => {\n    //   return this.main.currentPlaylist.songs.includes(item._id);\n    // });\n  }\n\n  setCurrentSong(id, i) {\n    this.main.currentSong = this.main.songs.filter(v => v._id === id)[0];\n    this.main.currentSong.iterator = i;\n    this.main.currentSong.textToSend.replace(/↵/g, '<br/>');\n    this.router.navigateByUrl('band/current-song');\n  }\n\n}\n","<h1 class=\"text-center\">{{this.main.currentPlaylist.name}}</h1>\n<h3 *ngFor=\"let song of songs; let i = index\" class=\"choose\" (click)=\"setCurrentSong(song._id, i)\">{{song.name}}</h3>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\nimport { Location } from '@angular/common';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  band;\n  songs;\n  currentSong;\n  currentPlaylist;\n  bandName;\n  api = 'https://zbior-piosenek-api.herokuapp.com/api/';\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private toastr: ToastrService,\n    private location: Location,\n  ) { }\n\n  login(bandName) {\n    this.http.get<any>(`${this.api}band/allBand?bandName=${bandName}`).subscribe(res => {\n      this.bandName = bandName;\n      this.band = res.band;\n      this.songs = res.songs;\n      console.log(res);\n      this.router.navigateByUrl('band')\n    })\n  }\n\n  refreshValues(): Observable<any> {\n    return this.http.get<any>(`${this.api}band/allBand?bandName=${this.bandName}`).pipe(\n      map(res => {\n        this.band = res.band;\n        this.songs = res.songs;\n      }))\n  }\n\n  setCurrentSong(songID) {\n    this.currentSong = this.songs.filter(v => v._id === songID);\n  }\n\n  addNewPlaylist(playlist) {\n    this.http.post(this.api + 'band/add/playlist', playlist).subscribe(res => {\n      this.toastr.success('Dodano nową playlistę.', 'Udało się!')\n      this.refreshValues().subscribe(res => {});\n    })\n  }\n\n  addNewSongToPlaylist(songToPlaylist): Observable<any> {\n    return this.http.post(this.api + 'band/add/songToPlaylist', songToPlaylist)\n  }\n\n  addNewSong(song) {\n    this.http.post(this.api + 'band/add/song', song).subscribe(res => {\n      this.toastr.success('Dodano nową piosenkę.', 'Udało się!')\n      this.refreshValues().subscribe(res => {});\n    })\n  }\n\n  refresh() {\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n      this.router.navigate([this.location.path()]);\n    });\n  }\n  delete(id) {\n    this.http.post(this.api + 'band/delete/song', {songID: id}).subscribe(res => {\n      this.toastr.success('usunięto piosenkę', 'Udało się!')\n      this.refreshValues().subscribe(res => {});\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-single-song',\n  templateUrl: './single-song.component.html',\n  styleUrls: ['./single-song.component.scss']\n})\nexport class SingleSongComponent implements OnInit {\n\n  constructor(\n    public main: MainService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {}\n\n  backToPlaylist() {\n    this.router.navigateByUrl('band/current-playlist');\n  }\n\n  nextSong(iter?) {\n    let iterator;\n    if(!iter) {\n      iterator = this.main.currentSong.iterator + 1;\n    } else {\n      iterator = iter+1;\n    }\n    const id = this.main.currentPlaylist.songs[iterator];\n    if (id) {\n      this.main.currentSong = this.main.songs.filter(v => {\n        console.log(v._id === id);\n        return v._id === id;\n      })[0];\n      if(!this.main.currentSong) {\n        this.nextSong(iterator);\n      } else {\n        this.main.currentSong.iterator = iterator;\n      }\n    } else {\n      this.toastr.error('Koniec playlisty!')\n      return;\n    }\n  }\n\n}\n","<button *ngIf=\"this.main.currentPlaylist\" (click)=\"backToPlaylist()\" class=\"btn btn-warning\">Wróć do playlisty</button>\n<h1 class=\"text-center mt-3\">{{this.main.currentSong.name}}</h1>\n<h4 class=\"text-left p-2\"\n    style=\" white-space: pre-wrap;\" id=\"text\">{{this.main.currentSong.textToSend}}</h4>\n<button *ngIf=\"this.main.currentPlaylist\" (click)=\"nextSong()\" class=\"btn btn-warning\">Następna piosenka</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(\n    private main: MainService\n  ) {\n    this.loginForm = new FormGroup({\n      bandName: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnInit() {\n    this.loginForm.controls.bandName.patchValue('test');\n    this.login();\n  }\n\n  login() {\n    if (this.loginForm.valid) {\n      this.main.login(this.loginForm.controls.bandName.value);\n    }\n  }\n\n}\n","<div class=\"cover h-100 w-100 row justify-content-center m-0\">\n  <div class=\"col-md-10 col-11 main\">\n    <div class=\"welcomeForm row justify-content-center \">\n      <h1 class=\"text-center col-12 m-0 p-0 mb-4\">Zaloguj się do swojego zespołu</h1>\n      <div class=\"col-md-6 col-11\">\n        <form [formGroup]=\"loginForm\">\n          <div class=\"form-group\">\n            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Nazwa zespołu\"\n                   formControlName=\"bandName\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-warning col-12\" (click)=\"login()\">Zaloguj się!</button>\n        </form>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}