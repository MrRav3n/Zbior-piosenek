{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-new/add-new.component.ts","./src/app/add-new/add-new.component.html","./src/app/all-songs/all-songs.component.ts","./src/app/all-songs/all-songs.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/band/band.component.ts","./src/app/band/band.component.html","./src/app/interceptor/http-error.interceptor.ts","./src/app/main-band/main-band.component.ts","./src/app/main-band/main-band.component.html","./src/app/playlist/playlist.component.ts","./src/app/playlist/playlist.component.html","./src/app/services/main.service.ts","./src/app/single-song/single-song.component.ts","./src/app/single-song/single-song.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-add-new',\n  templateUrl: './add-new.component.html',\n  styleUrls: ['./add-new.component.scss']\n})\nexport class AddNewComponent implements OnInit {\n\n  addNewPlaylistForm: FormGroup;\n  addSongToPlaylistForm: FormGroup;\n  addNewSongForm: FormGroup;\n  songs = [];\n\n  constructor(\n    public main: MainService,\n    private toastr: ToastrService\n  ) {\n    this.addNewPlaylistForm = new FormGroup({\n      playlistName: new FormControl('', Validators.required)\n    })\n    this.addSongToPlaylistForm = new FormGroup({\n      songID: new FormControl('', Validators.required),\n      playlistID: new FormControl('', Validators.required),\n      bandID: new FormControl('', Validators.required)\n    })\n    this.addNewSongForm = new FormGroup({\n      songName: new FormControl('', Validators.required),\n      textToSend: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnInit() {}\n  onEditClick(val: any) {\n    this.songs = this.main.songs.filter((item) => {\n      return !this.main.band.playlist[val.split('$')[1]].songs.includes(item._id);\n    });\n  }\n\n  addNewPlaylist() {\n    if (this.addNewPlaylistForm.valid) {\n      this.addNewPlaylistForm.setControl('bandID', new FormControl(this.main.band._id))\n      this.main.addNewPlaylist(this.addNewPlaylistForm.value);\n    }\n  }\n\n  addNewSongToPlaylist() {\n    this.addSongToPlaylistForm.controls.playlistID.setValue(this.addSongToPlaylistForm.get('playlistID').value.split('$')[0]);\n    this.addSongToPlaylistForm.controls.bandID.setValue(this.main.band._id);\n    if (this.addSongToPlaylistForm.valid) {\n      this.main.addNewSongToPlaylist(this.addSongToPlaylistForm.value).subscribe(res => {\n        this.toastr.success('Dodano nową piosenkę do playlisty.', 'Udało się!')\n        this.main.refreshValues().subscribe(res => {\n          this.songs = [];\n          this.addSongToPlaylistForm.reset();\n          if(this.main.band.playlist.length === 1) {\n            this.addSongToPlaylistForm.controls.playlistID.setValue(this.main.band.playlist[0]._id);\n            this.songs = this.main.songs.filter((item) => {\n              return !this.main.band.playlist[0].songs.includes(item._id);\n            });\n            this.addSongToPlaylistForm.controls.songID.setValue(this.songs[0]._id);\n          }\n          console.log(this.addSongToPlaylistForm.value)\n        });\n      });\n    }\n  }\n  addNewSong() {\n    if (this.addNewSongForm.valid) {\n      this.addNewSongForm.setControl('bandID', new FormControl(this.main.band._id))\n      this.main.addNewSong(this.addNewSongForm.value);\n    }\n  }\n\n}\n","<div class=\"cover m-0 row justify-content-center\">\n<div class=\"welcomeForm row justify-content-center col-md-10 col-11\">\n  <h1 class=\"text-center col-12 p-0 m-0 mb-4\">Dodaj nową playlistę</h1>\n  <div class=\"col-md-6 col-11\">\n    <form [formGroup]=\"addNewPlaylistForm\">\n      <div class=\"form-group\">\n        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Nazwa playlisty\"\n               formControlName=\"playlistName\">\n      </div>\n      <button class=\"btn btn-warning col-12\" (click)=\"addNewPlaylist()\">Dodaj!</button>\n    </form>\n  </div>\n</div>\n\n<div class=\"welcomeForm row justify-content-center col-md-10 col-11\">\n  <h1 class=\"text-center col-12 p-0 m-0 mb-4\">Dodaj piosenkę do playlisty</h1>\n  <div class=\"col-md-6 col-11\">\n    <form [formGroup]=\"addSongToPlaylistForm\">\n      <div class=\"form-group\">\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlSelect2\">Nazwa playlisty</label>\n          <select class=\"form-control\" id=\"exampleFormControlSelect2\" formControlName=\"playlistID\" (change)=\"onEditClick($event.target.value)\">\n            <option *ngFor=\"let playlist of this.main.band.playlist, let i=index\" [value]=\"playlist._id+'$'+i\">{{playlist.name}}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlSelect1\">Nazwa piosenki do dodania do playlisty</label>\n          <select class=\"form-control\" id=\"exampleFormControlSelect1\" formControlName=\"songID\">\n            <option *ngFor=\"let song of this.songs\" [value]=\"song._id\">{{song.name}}</option>\n          </select>\n        </div>\n      </div>\n      <button class=\"btn btn-warning col-12\" (click)=\"addNewSongToPlaylist()\">Dodaj!</button>\n    </form>\n  </div>\n</div>\n\n<div class=\"welcomeForm row justify-content-center col-md-10 col-11\">\n  <h1 class=\"text-center col-12 p-0 m-0 mb-4\">Dodaj nową piosenkę</h1>\n  <div class=\"col-md-6 col-11\">\n    <form [formGroup]=\"addNewSongForm\">\n      <div class=\"form-group\">\n        <input type=\"email\" class=\"form-control\"  aria-describedby=\"emailHelp\" placeholder=\"Nazwa piosenki\"\n               formControlName=\"songName\">\n      </div>\n      <div class=\"form-group\">\n        <textarea class=\"form-control\" rows=\"5\" formControlName=\"textToSend\" placeholder=\"Treść piosenki\"></textarea>\n      </div>\n      <button class=\"btn btn-warning col-12\" (click)=\"addNewSong()\">Dodaj!</button>\n    </form>\n  </div>\n</div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-all-songs',\n  templateUrl: './all-songs.component.html',\n  styleUrls: ['./all-songs.component.scss']\n})\nexport class AllSongsComponent implements OnInit {\n\n  constructor(\n    public main: MainService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.main.currentPlaylist = undefined;\n  }\n\n  setCurrentSong(id) {\n    this.main.currentSong = this.main.songs.filter(v => v._id === id)[0];\n    this.main.currentSong.textToSend.replace(/↵/g, '<br/>');\n    this.router.navigateByUrl('band/current-song');\n  }\n\n}\n","<h1 class=\"text-center bb mt-2\">Wszystkie piosenki</h1>\n<h3 *ngFor=\"let song of this.main.songs\" class=\"choose\" (click)=\"setCurrentSong(song._id)\">{{song.name}}</h3>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from \"./welcome/welcome.component\";\nimport { AllSongsComponent } from \"./all-songs/all-songs.component\";\nimport { PlaylistComponent } from \"./playlist/playlist.component\";\nimport { AddNewComponent } from \"./add-new/add-new.component\";\nimport { BandComponent } from \"./band/band.component\";\nimport { MainBandComponent } from \"./main-band/main-band.component\";\nimport { SingleSongComponent } from \"./single-song/single-song.component\";\n\n\nconst routes: Routes = [\n  {path: '', component: WelcomeComponent},\n  {path: 'band', component: BandComponent, children: [\n      {path: 'all-songs', component: AllSongsComponent},\n      {path: '', component: MainBandComponent},\n      {path: 'playlist', component: PlaylistComponent},\n      {path: 'add-new', component: AddNewComponent},\n      {path: 'current-playlist', component: PlaylistComponent},\n      {path: 'current-song', component: SingleSongComponent},\n  ]},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { MainService } from \"./services/main.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(\n    private main: MainService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    if (this.main.band) {\n      this.router.navigateByUrl('all-songs');\n    } else {\n      this.router.navigateByUrl('');\n    }\n  }\n\n}\n","<router-outlet class=\"w-100 h-100\">\r\n\r\n</router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { AllSongsComponent } from './all-songs/all-songs.component';\nimport { PlaylistComponent } from './playlist/playlist.component';\nimport { AddNewComponent } from './add-new/add-new.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from \"@angular/common/http\";\nimport { MainService } from \"./services/main.service\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { BandComponent } from './band/band.component';\nimport { MainBandComponent } from './main-band/main-band.component';\nimport { SingleSongComponent } from './single-song/single-song.component';\nimport { HttpErrorInterceptor } from \"./interceptor/http-error.interceptor\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    AllSongsComponent,\n    PlaylistComponent,\n    AddNewComponent,\n    BandComponent,\n    MainBandComponent,\n    SingleSongComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot({\n      timeOut: 3000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n    }),\n    BrowserAnimationsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [\n    MainService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptor,\n      multi: true,\n      deps: [ToastrService]\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\n\n@Component({\n  selector: 'app-band',\n  templateUrl: './band.component.html',\n  styleUrls: ['./band.component.scss']\n})\nexport class BandComponent implements OnInit {\n\n  constructor(\n    public main: MainService\n  ) { }\n\n  ngOnInit() {}\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" routerLink=\"/band\">Zbiór-piosenek</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse ml-md-auto\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/band\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\">Strona główna</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/band/add-new\" [routerLinkActive]=\"['active']\">Dodaj</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"/band/all-songs\" [routerLinkActive]=\"['active']\">Wszystkie piosenki</a>\n      </li>\n\n    </ul>\n  </div>\n</nav>\n<router-outlet>\n\n</router-outlet>\n","import {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nexport const InterceptorSkipHeader = 'X-Skip-Interceptor';\n\nexport class HttpErrorInterceptor implements HttpInterceptor {\n\n  constructor(\n    private toastr: ToastrService,\n  ) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (request.headers.has(InterceptorSkipHeader)) {\n      const headers = request.headers.delete(InterceptorSkipHeader);\n      return next.handle(request.clone({ headers }));\n    }\n\n    return next.handle(request)\n      .pipe(\n        retry(1),\n        catchError((error: HttpErrorResponse) => {\n          let errorTitle = '';\n          let errorMessage = '';\n\n          if (error.error) {\n            errorTitle = 'Wystąpił błąd!';\n            errorMessage =  error.error.error;\n            this.toastr.error(errorMessage, errorTitle);\n          } else {\n            errorTitle = `Kod błędu: ${error.status}`;\n            errorMessage = `Wiadomość: ${error.message}`;\n            this.toastr.error(errorMessage, errorTitle);\n          }\n          return throwError(errorMessage);\n        })\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-main-band',\n  templateUrl: './main-band.component.html',\n  styleUrls: ['./main-band.component.scss']\n})\nexport class MainBandComponent implements OnInit {\n\n  constructor(\n    public main: MainService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {}\n\n  setCurrentPlaylist(id) {\n    this.main.currentPlaylist = this.main.band.playlist.filter(v => v._id === id)[0];\n    this.router.navigateByUrl('band/current-playlist');\n  }\n\n}\n","<h1 class=\"text-center mt-2 mb-3 bb\">{{this.main.band.name}}</h1>\n\n<h1 class=\"text-center\">Twoje playlisty</h1>\n\n<h3 *ngFor=\"let playlist of main.band.playlist\" class=\"choose\" (click)=\"setCurrentPlaylist(playlist._id)\">{{playlist.name}}</h3>\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-playlist',\n  templateUrl: './playlist.component.html',\n  styleUrls: ['./playlist.component.scss']\n})\nexport class PlaylistComponent implements OnInit {\n\n  songs = [];\n\n  constructor(\n    public main: MainService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.songs = this.main.songs.filter((item) => {\n      return this.main.currentPlaylist.songs.includes(item._id);\n    });\n  }\n\n  setCurrentSong(id, i) {\n    this.main.currentSong = this.main.songs.filter(v => v._id === id)[0];\n    this.main.currentSong.iterator = i;\n    this.main.currentSong.textToSend.replace(/↵/g, '<br/>');\n    this.router.navigateByUrl('band/current-song');\n  }\n\n}\n","<h1 class=\"text-center\">{{this.main.currentPlaylist.name}}</h1>\n<h3 *ngFor=\"let song of songs; let i = index\" class=\"choose\" (click)=\"setCurrentSong(song._id, i)\">{{song.name}}</h3>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  band;\n  songs;\n  currentSong;\n  currentPlaylist;\n  bandName;\n  api = 'https://zbior-piosenek-api.glitch.me/api/';\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  login(bandName) {\n    this.http.get<any>(`${this.api}band/allBand?bandName=${bandName}`).subscribe(res => {\n      this.bandName = bandName;\n      this.band = res.band;\n      this.songs = res.songs;\n      console.log(res);\n      this.router.navigateByUrl('band')\n    })\n  }\n\n  refreshValues(): Observable<any> {\n    return this.http.get<any>(`${this.api}band/allBand?bandName=${this.bandName}`).pipe(\n      map(res => {\n        this.band = res.band;\n        this.songs = res.songs;\n      }))\n  }\n\n  setCurrentSong(songID) {\n    this.currentSong = this.songs.filter(v => v._id === songID);\n  }\n\n  addNewPlaylist(playlist) {\n    this.http.post(this.api + 'band/add/playlist', playlist).subscribe(res => {\n      this.toastr.success('Dodano nową playlistę.', 'Udało się!')\n      this.refreshValues().subscribe(res => {});\n    })\n  }\n\n  addNewSongToPlaylist(songToPlaylist): Observable<any> {\n    return this.http.post(this.api + 'band/add/songToPlaylist', songToPlaylist)\n  }\n\n  addNewSong(song) {\n    this.http.post(this.api + 'band/add/song', song).subscribe(res => {\n      this.toastr.success('Dodano nową piosenkę.', 'Udało się!')\n      this.refreshValues().subscribe(res => {});\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { Router } from \"@angular/router\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: 'app-single-song',\n  templateUrl: './single-song.component.html',\n  styleUrls: ['./single-song.component.scss']\n})\nexport class SingleSongComponent implements OnInit {\n\n  constructor(\n    public main: MainService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {}\n\n  backToPlaylist() {\n    this.router.navigateByUrl('band/current-playlist');\n  }\n\n  nextSong() {\n    const iterator = this.main.currentSong.iterator + 1;\n    const id = this.main.currentPlaylist.songs[iterator];\n    console.log(id);\n    console.log( this.main.currentSong.iterator);\n    console.log(this.main.currentSong);\n    if (id) {\n\n      this.main.currentSong = this.main.songs.filter(v => v._id === id)[0];\n      this.main.currentSong.iterator = iterator;\n      console.log(this.main.currentSong);\n    } else {\n      this.toastr.error('Koniec playlisty!')\n    }\n  }\n\n}\n","<button *ngIf=\"this.main.currentPlaylist\" (click)=\"backToPlaylist()\" class=\"btn btn-warning\">Wróć do playlisty</button>\n<h1 class=\"text-center mt-3\">{{this.main.currentSong.name}}</h1>\n<h4 class=\"text-left p-2\"\n    style=\" white-space: pre-wrap;\" id=\"text\">{{this.main.currentSong.textToSend}}</h4>\n<button *ngIf=\"this.main.currentPlaylist\" (click)=\"nextSong()\" class=\"btn btn-warning\">Następna piosenka</button>\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from \"../services/main.service\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(\n    private main: MainService\n  ) {\n    this.loginForm = new FormGroup({\n      bandName: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnInit() {\n    this.loginForm.controls.bandName.patchValue('test');\n    this.login();\n  }\n\n  login() {\n    if (this.loginForm.valid) {\n      this.main.login(this.loginForm.controls.bandName.value);\n    }\n  }\n\n}\n","<div class=\"cover h-100 w-100 row justify-content-center m-0\">\n  <div class=\"col-md-10 col-11 main\">\n    <div class=\"welcomeForm row justify-content-center \">\n      <h1 class=\"text-center col-12 m-0 p-0 mb-4\">Zaloguj się do swojego zespołu</h1>\n      <div class=\"col-md-6 col-11\">\n        <form [formGroup]=\"loginForm\">\n          <div class=\"form-group\">\n            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Nazwa zespołu\"\n                   formControlName=\"bandName\">\n          </div>\n          <button type=\"submit\" class=\"btn btn-warning col-12\" (click)=\"login()\">Zaloguj się!</button>\n        </form>\n      </div>\n    </div>\n  </div>\n\n\n</div>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}